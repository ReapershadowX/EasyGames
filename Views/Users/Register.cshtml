@model EasyGamesProject.ViewModels.RegisterViewModel
@{
    ViewData["Title"] = "Register";
}

<h2>Register</h2>

<!-- Display a success message if available in TempData -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

<!-- Registration form binding to RegisterViewModel -->
<form asp-action="Register" method="post">
    <!-- Validation summary for all errors -->
    <div asp-validation-summary="All" class="text-danger"></div>

    <div class="form-group">
        <label asp-for="FirstName"></label>
        <input asp-for="FirstName" class="form-control" />
        <!-- Display validation error for FirstName -->
        <span asp-validation-for="FirstName" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="LastName"></label>
        <input asp-for="LastName" class="form-control" />
        <!-- Display validation error for LastName -->
        <span asp-validation-for="LastName" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Email"></label>
        <input asp-for="Email" class="form-control" type="email" />
        <!-- Display validation error for Email, including duplicate email -->
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Password"></label>
        <input asp-for="Password" class="form-control" type="password" />
        <!-- Display validation error for Password -->
        <span asp-validation-for="Password" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="ConfirmPassword"></label>
        <input asp-for="ConfirmPassword" class="form-control" type="password" />
        <!-- Display validation error for ConfirmPassword -->
        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</form>

@section Scripts {
    @{
        // Required for client-side input validation
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
